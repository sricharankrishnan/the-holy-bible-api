{"version":3,"sources":["../src/index.ts","../src/service/random-verse/index.ts","../src/service/fetch-single-verse/index.ts"],"sourcesContent":["/* app imports */\nimport { HolyBibleInt, FetchRandomVerseReturn, FetchSingleVerseProps } from \"./types\";\nimport { RandomVerseProps } from \"./types/random-verse\";\nimport { SingleVerse } from \"./types/index\";\nimport randomVerseHandler from \"./service/random-verse/index\";\nimport fetchASingleVerse from \"./service/fetch-single-verse/index\";\n\n/* class */\nclass HolyBible implements HolyBibleInt {\n  baseUrl: string;\n\n  /* @constructor */\n  constructor() {\n    this.baseUrl = \"https://bible-api.com/\";\n  };\n\n  /**\n   * @props:\n   * - @name: string - name of the book\n   * - @chapter: number - chapter number\n   * - @verse: number - verse number\n   */\n  async fetchASingleVerse(props: FetchSingleVerseProps): Promise<SingleVerse> {\n    const $this = this;\n    const { name, chapter, verse } = props;\n    const requestUrl = `${this.baseUrl}${name}+${chapter}:${verse}`;\n\n    /* fetch and return to client */\n    const data = await fetchASingleVerse(requestUrl);\n    return data;\n  }\n\n  /**\n   * gets a random verse through the api\n   * @arg: RandomVerseProps\n   */\n  async fetchRandomVerse(props: RandomVerseProps): Promise<FetchRandomVerseReturn> {\n    const $this = this;\n    const { langId } = props;\n    const translation = !langId ? \"web\" : langId;\n    const requestUrl = `${$this.baseUrl}?random=verse&translation=${translation}`;\n\n    /* fetch and return to client */\n    const data = await randomVerseHandler({requestUrl});\n    return data;\n  }\n}\n\n/* exports */\nexport default HolyBible;\n","/* node module imports */\nimport axios, { AxiosResponse } from \"axios\";\n\n/* app imports */\nimport { FetchRandomVerseReturn } from \"../../types\";\n\n/* interface */\ntype ModuleProps = {requestUrl: string};\ntype ModuleReturns = Promise<FetchRandomVerseReturn>;\n\n/* module */\nfunction fetchRandomVerse(props: ModuleProps): ModuleReturns {\n  return new Promise((resolve, reject) => {\n    const { requestUrl } = props;\n\n    /* fetch data */\n    axios.get(requestUrl).then((response) => {\n      if (response.statusText.toLowerCase() !== \"ok\") {\n        throw new Error(\"Api Request Error - Random Verse Fetch\");\n        return;\n      }\n\n      /* format */\n      const { data } = response;\n      const payload = {\n        book: {\n          id: data.verses[0].book_id,\n          name: data.verses[0].book_name\n        },\n        chapter: data.verses[0].chapter,\n        verse: data.verses[0].verse,\n        text: data.text,\n        translation: {\n          id: data.translation_id,\n          name: data.translation_name,\n          note: data.translation_note\n        }\n      };\n\n      /* return to client */\n      resolve({\n        code: \"api-ok\",\n        message: \"Api success - Fetch Random Verse\",\n        payload\n      });\n    })\n    .catch((error) => {\n      reject({\n        code: \"api-fail\",\n        message: \"Something went wrong\",\n        payload: error\n      });\n    });\n  });\n}\nexport default fetchRandomVerse;\n","/* node module imports */\nimport axios, { AxiosResponse } from \"axios\";\n\n/* app imports */\nimport { SingleVerse } from \"../../types/index\";\n\n/* module */\nfunction fetchASingleVerse(requestUrl: string): Promise<SingleVerse> {\n  return new Promise((resolve, reject) => {\n    axios.get(requestUrl)\n      .then((response: AxiosResponse) => {\n        if (response.statusText.toLowerCase() === \"ok\" || response.status === 200) {\n          /* extract */\n          const { data } = response;\n\n          /* format */\n          const verse: SingleVerse = {\n            book: {\n              id: data.verses[0].book_id,\n              name: data.verses[0].book_name,\n            },\n            chapter: data.verses[0].chapter,\n            verse: data.verses[0].verse,\n            text: data.verses[0].text,\n            translation: {\n              id: data.translation_id,\n              name: data.translation_name,\n              note: data.translation_note\n            }\n          };\n\n          /* return to client */\n          resolve(verse);\n        }\n        else {\n          throw new Error(\"Sorry. Fetching A Single Verse: - something went wrong\");\n          return;\n        }\n      })\n      .catch((error) => {\n        reject({\n          code: \"api-fail\",\n          message: \"Something went wrong\",\n          payload: error\n        });\n      });\n  });\n}\n\n/* exports */\nexport default fetchASingleVerse;\n"],"mappings":"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","names":["axios","import_axios","axios"]}