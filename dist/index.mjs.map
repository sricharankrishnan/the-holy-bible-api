{"version":3,"sources":["../src/service/random-verse/index.ts","../src/service/fetch-single-verse/index.ts","../src/service/fetch-verses-by-range/index.ts","../src/service/help/index.ts","../src/index.ts"],"sourcesContent":["/* node module imports */\nimport axios, { AxiosResponse } from \"axios\";\n\n/* app imports */\nimport { RandomVerseReturn } from \"../../types\";\n\n/* interface */\ntype ModuleProps = {requestUrl: string};\ntype ModuleReturns = Promise<RandomVerseReturn>;\n\n/* module */\nfunction fetchRandomVerse(props: ModuleProps): ModuleReturns {\n  return new Promise((resolve, reject) => {\n    const { requestUrl } = props;\n\n    /* fetch data */\n    axios.get(requestUrl).then((response) => {\n      if (response.statusText.toLowerCase() !== \"ok\") {\n        throw new Error(\"Api Request Error - Random Verse Fetch\");\n        return;\n      }\n\n      /* format */\n      const { data } = response;\n      const payload = {\n        book: {\n          id: data.verses[0].book_id,\n          name: data.verses[0].book_name\n        },\n        chapter: data.verses[0].chapter,\n        verse: data.verses[0].verse,\n        text: data.text,\n        translation: {\n          id: data.translation_id,\n          name: data.translation_name,\n          note: data.translation_note\n        }\n      };\n\n      /* return to client */\n      resolve({\n        code: \"api-ok\",\n        message: \"Api success - Fetch Random Verse\",\n        payload\n      });\n    })\n    .catch((error) => {\n      if (error.response) {\n        reject({\n          code: \"api-fail\",\n          message: \"The request was made and the server responded with a status code\",\n          payload: error.response\n        });\n      }\n      else if (error.request) {\n        reject({\n          code: \"api-fail\",\n          message: \"The request was made but no response was received\",\n          payload: error.request\n        });\n      }\n      else {\n        reject({\n          code: \"api-fail\",\n          message: \"Something happened in setting up the request that triggered an Error\",\n          payload: error.message\n        });\n      }\n    });\n  });\n}\nexport default fetchRandomVerse;\n","/* node module imports */\nimport axios, { AxiosResponse } from \"axios\";\n\n/* app imports */\nimport { SingleVerse } from \"../../types/verse\";\nimport { SingleVerseReturn } from \"../../types/index\";\n\n/* module */\nfunction fetchASingleVerse(requestUrl: string): Promise<SingleVerseReturn> {\n  return new Promise((resolve, reject) => {\n    axios.get(requestUrl)\n      .then((response: AxiosResponse) => {\n        if (response.statusText.toLowerCase() === \"ok\" || response.status === 200) {\n          /* extract */\n          const { data } = response;\n\n          /* format */\n          const verse: SingleVerse = {\n            book: {\n              id: data.verses[0].book_id,\n              name: data.verses[0].book_name,\n            },\n            chapter: data.verses[0].chapter,\n            verse: data.verses[0].verse,\n            text: data.verses[0].text,\n            translation: {\n              id: data.translation_id,\n              name: data.translation_name,\n              note: data.translation_note\n            }\n          };\n\n          /* return to client */\n          resolve({\n            code: \"api-ok\",\n            message: \"API Success: Fetch Single Verse\",\n            payload: verse\n          });\n        }\n        else {\n          throw new Error(\"Sorry. Fetching A Single Verse: - something went wrong\");\n          return;\n        }\n      })\n      .catch((error) => {\n        if (error.response) {\n          reject({\n            code: \"api-fail\",\n            message: \"The request was made and the server responded with a status code\",\n            payload: error.response\n          });\n        }\n        else if (error.request) {\n          reject({\n            code: \"api-fail\",\n            message: \"The request was made but no response was received\",\n            payload: error.request\n          });\n        }\n        else {\n          reject({\n            code: \"api-fail\",\n            message: \"Something happened in setting up the request that triggered an Error\",\n            payload: error.message\n          });\n        }\n      });\n  });\n}\n\n/* exports */\nexport default fetchASingleVerse;\n","/* node module imports */\nimport axios, { AxiosResponse } from \"axios\";\n\n/* app imports */\nimport { VerseByRangeReturn } from \"../../types/index\";\nimport { Verse } from \"../../types/verse\";\n\n/* module */\nfunction fetchChapterVersesByRange(requestUrl: string): Promise<VerseByRangeReturn> {\n  return new Promise((resolve, reject) => {\n    axios.get(requestUrl)\n      .then((response: AxiosResponse) => {\n        if (response.statusText.toLowerCase() === \"ok\" || response.status === 200) {\n          /* extract */\n          const { data } = response;\n\n          /* format verses data */\n          const verses = data.verses.reduce((composed: Verse[], aVerse: Record<string, any>) => {\n            const obj = {\n              book: {\n                id: aVerse.book_id,\n                name: aVerse.book_name\n              },\n              chapter: aVerse.chapter,\n              verse: aVerse.verse,\n              text: aVerse.text\n            };\n            composed.push(obj);\n            return composed;\n          }, []);\n\n          /* format translation data */\n          const translation = {\n            id: data.translation_id,\n            name: data.translation_name,\n            note: data.translation_note\n          };\n\n          /* return to client */\n          resolve({\n            code: \"api-ok\",\n            message: \"API Success - Fetch Chapter Verses By Range\",\n            payload: {\n              verses,\n              translation\n            }\n          });\n        }\n        else {\n          throw new Error(\"Sorry. Fetching A Single Verse: - something went wrong\");\n          return;\n        }\n      })\n      .catch((error) => {\n        if (error.response) {\n          reject({\n            code: \"api-fail\",\n            message: \"The request was made and the server responded with a status code\",\n            payload: error.response\n          });\n        }\n        else if (error.request) {\n          reject({\n            code: \"api-fail\",\n            message: \"The request was made but no response was received\",\n            payload: error.request\n          });\n        }\n        else {\n          reject({\n            code: \"api-fail\",\n            message: \"Something happened in setting up the request that triggered an Error\",\n            payload: error.message\n          });\n        }\n      });\n  });\n}\n\n/* exports */\nexport default fetchChapterVersesByRange;\n","/* module */\nfunction systemHelp(): Record<string, any> {\n  const helpObject = {\n    name: \"https://bible-api.com/\",\n    about: \"This is a tiny little web app that provides a JSON API for grabbing bible verses and passages.\",\n    translations: {\n      \"1\": {\n        language: \"Cherokee\",\n        name: \"Cherokee New Testament\",\n        identifier: \"cherokee\",\n      },\n      \"2\": {\n        language: \"Czech\",\n        name: \"Bible kralická\",\n        identifier: \"bkr\",\n      },\n      \"3\": {\n        language: \"English\",\n        name: \"American Standard Version (1901)\",\n        identifier: \"asv\",\n      },\n      \"4\": {\n        language: \"English\",\n        name: \"Bible in Basic English\",\n        identifier: \"bbv\",\n      },\n      \"5\": {\n        language: \"English\",\n        name: \"Darby Bible\",\n        identifier: \"darby\",\n      },\n      \"6\": {\n        language: \"English\",\n        name: \"Douay-Rheims 1899 American Edition\",\n        identifier: \"dra\",\n      },\n      \"7\": {\n        language: \"English\",\n        name: \"King James Version\",\n        identifier: \"kjv\",\n      },\n      \"8\": {\n        language: \"English (Default)\",\n        name: \"World English Bible\",\n        identifier: \"web\",\n      },\n      \"9\": {\n        language: \"English\",\n        name: \"Young's Literal Translation\",\n        identifier: \"ylt\",\n      },\n      \"10\": {\n        language: \"English (UK)\",\n        name: \"Open English Bible, Commonwealth Edition\",\n        identifier: \"\toeb-cw\",\n      },\n      \"11\": {\n        language: \"English (UK)\",\n        name: \"World English Bible, British Edition\",\n        identifier: \"webbe\",\n      },\n      \"12\": {\n        language: \"English (US)\",\n        name: \"Open English Bible, US Edition\",\n        identifier: \"oeb-us\",\n      },\n      \"13\": {\n        language: \"Latin\",\n        name: \"Clementine Latin Vulgate\",\n        identifier: \"clementine\",\n      },\n      \"14\": {\n        language: \"Portuguese\",\n        name: \"João Ferreira de Almeida\",\n        identifier: \"almeida\",\n      },\n      \"15\": {\n        language: \"Romanian\",\n        name: \"Protestant Romanian Corrected Cornilescu Version\",\n        identifier: \"rccv\",\n      },\n    }\n  };\n  return helpObject;\n}\n\n/* exports */\nexport default systemHelp;\n","/* app imports */\nimport {\n  HolyBibleInt,\n  RandomVerseReturn,\n  SingleVerseProps,\n  SingleVerseReturn,\n  VerseByRangeProps,\n  VerseByRangeReturn,\n  VerseByMultiRangeProps\n} from \"./types\";\nimport { RandomVerseProps } from \"./types/random-verse\";\nimport { SingleVerse } from \"./types/verse\";\nimport randomVerseHandler from \"./service/random-verse/index\";\nimport fetchASingleVerse from \"./service/fetch-single-verse/index\";\nimport fetchVersesByRange from \"./service/fetch-verses-by-range/index\";\nimport systemHelp from \"./service/help/index\";\n\n/* class */\nclass HolyBible implements HolyBibleInt {\n  baseUrl: string;\n\n  /* @constructor */\n  constructor() {\n    this.baseUrl = \"https://bible-api.com/\";\n  };\n\n  /**\n   * @props:\n   * - name: string - name of the book\n   * - range: Array<{chapter: number, verses: string[]}>: chapter number with the verse ranges\n   */\n  async fetchChapterVersesByMultiRange(props: VerseByMultiRangeProps): Promise<VerseByRangeReturn | unknown> {\n    const $this = this;\n    const { name, range, langId } = props;\n\n    /* composed the request url based on the received params */\n    let requestUrl = range.reduce((composed, data, index) => {\n      /* extract */\n      const { chapter, verses } = data;\n\n      /* create the join */\n      const versesJoin = verses.join(\",\");\n      const chapVerJoined = (index === range.length - 1) ? `${chapter}:${versesJoin}` : `${chapter}:${versesJoin},`;\n\n      /* compose */\n      composed = `${composed}${chapVerJoined}`;\n      return composed;\n    }, `${$this.baseUrl}${name}+`);\n\n    /* add the translation */\n    requestUrl = !langId ? `${requestUrl}?translation=web` : `${requestUrl}?translation=${langId}`;\n\n    /* fetch and return to client */\n    try {\n      const data = await fetchVersesByRange(requestUrl);\n      return data;\n    } catch(error) {\n      return error;\n    }\n  };\n\n  /**\n   * @props:\n   * - name: string - name of the book\n   * - chapter: number - chapter number\n   * - start: number - staring verse number\n   * - end: number - ending verse number\n   */\n  async fetchChapterVersesByRange(props: VerseByRangeProps): Promise<VerseByRangeReturn | unknown> {\n    /* not ok... */\n    if (props.end < props.start) {\n      return {\n        code: \"api-fail\",\n        message: \"Something has gone wrong\",\n        payload: \"The 'end' value cannot be less than the 'start' value\"\n      };\n    }\n\n    /* ok... */\n    const $this = this;\n    const { name, chapter, start, end, langId } = props;\n    const translation = !langId ? \"web\" : langId;\n    const requestUrl = `${this.baseUrl}${name}+${chapter}:${start}-${end}?translation=${translation}`;\n\n    /* fetch and return to client */\n    try {\n      const data = await fetchVersesByRange(requestUrl);\n      return data;\n    } catch (error) {\n      return error;\n    }\n  }\n\n  /**\n   * @props:\n   * - name: string - name of the book\n   * - chapter: number - chapter number\n   * - verse: number - verse number\n   */\n  async fetchASingleVerse(props: SingleVerseProps): Promise<SingleVerseReturn | unknown> {\n    const $this = this;\n    const { name, chapter, verse, langId } = props;\n    const translation = !langId ? \"web\" : langId;\n    const requestUrl = `${this.baseUrl}${name}+${chapter}:${verse}?translation=${translation}`;\n\n    /* fetch and return to client */\n    try {\n      const data = await fetchASingleVerse(requestUrl);\n      return data;\n    } catch (error) {\n      return error;\n    }\n  }\n\n  /**\n   * @props:\n   * {langId?: string;}\n   */\n  async fetchRandomVerse(props: RandomVerseProps): Promise<RandomVerseReturn | unknown> {\n    const $this = this;\n    const { langId } = props;\n    const translation = !langId ? \"web\" : langId;\n    const requestUrl = `${$this.baseUrl}?random=verse&translation=${translation}`;\n\n    /* fetch and return to client */\n    try {\n      const data = await randomVerseHandler({requestUrl});\n      return data;\n    } catch (error) {\n      return error;\n    }\n  }\n\n  /**\n   * fetches data about the api and allowed languages for translation\n   */\n  fetchSystemHelp(): Record<string, any> {\n    return {\n      code: \"api-ok\",\n      message: \"API System Help\",\n      payload: systemHelp()\n    };\n  }\n}\n\n/* exports */\nexport default HolyBible;\n"],"mappings":"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","names":["axios","axios"]}